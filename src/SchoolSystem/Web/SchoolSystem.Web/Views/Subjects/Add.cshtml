@model SubjectsInputModel


<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <label asp-for="ClassId"></label>
    <select class="form-select class-dropdown" asp-for="ClassId" asp-items="@(new SelectList(Model.Classes, "Id", "Name"))"></select>
    <span asp-validation-for="ClassId" class="text-danger"></span>
    <label asp-for="TeacherId"></label>
    <select class="form-select teacher-dropdown" asp-for="TeacherId" asp-items="@(new SelectList(Model.Teachers, "Id", "FullName"))"></select>
    @for (int i = 0; i < 10; i++)
    {
        <div class="subjects-container mb-3 @(i > 0 ? "d-none" : "")">
            <label asp-for="@(Model.SubjectsIds[i])">Предмет @(i + 1)</label>
            <select class="form-select" asp-for="@(Model.SubjectsIds[i])" asp-items="@(new SelectList(Model.Subjects, "Id", "Name"))">
                <option selected="selected" value="">Моля избери</option>
            </select>

           
                @if (Html.ViewData.ModelState[$"SubjectsIds[{i}]"] != null)
                {
                <ul>
                    @foreach (var error in Html.ViewData.ModelState[$"SubjectsIds[{i}]"].Errors)
                    {
                        <li class="text-danger">@error.ErrorMessage</li>
                    }
                </ul>
                }

        </div>
    }
    <a class="add-more" style="cursor: pointer">Добавяне на още предмети</a><br />
    <div class="btn-container mt-2">
        <button class="btn btn-primary" type="submit">Запамети</button>
    </div>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("select:not(:first)").each(function () {
                if ($(this).val()) {
                    $(this).closest(".subjects-container").removeClass("d-none");
                }
            });

            $("a.add-more").click(function () {
                if ($(".subjects-container.d-none").length > 0) {
                    $(".subjects-container.d-none:first").removeClass("d-none");
                    if ($(".subjects-container.d-none").length == 0) {
                        $(this).addClass("d-none");
                    }
                }

            });

            $(".class-dropdown").on("change", function () {
                let selectedClass = $(this).val();
                $.get(`/api/teachers/AllTeachers?classId=${selectedClass}`, function (data, status) {
                    if (status == 'success') {
                        $(".teacher-dropdown").empty();
                        for (const teacher of data) {
                            $(".teacher-dropdown").append(`<option value="${teacher.id}">${teacher.fullName}</option>`);
                        }
                    }

                });
            }).trigger("change");

            $(".teacher-dropdown").on("change", function () {
                let selectedTeacher = $(this).val();

            })
            .trigger("change")


        });
    </script>
}
